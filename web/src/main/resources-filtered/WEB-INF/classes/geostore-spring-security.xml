<beans xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"

        xmlns:security="http://www.springframework.org/schema/security"

        xmlns:cxf="http://cxf.apache.org/core" xmlns:jaxws="http://cxf.apache.org/jaxws"
        xmlns:jaxrs="http://cxf.apache.org/jaxrs"

        xsi:schemaLocation="
            http://www.springframework.org/schema/beans     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://cxf.apache.org/jaxws                     http://cxf.apache.org/schemas/jaxws.xsd
            http://cxf.apache.org/jaxrs                     http://cxf.apache.org/schemas/jaxrs.xsd
            http://cxf.apache.org/core                      http://cxf.apache.org/schemas/core.xsd
            http://www.springframework.org/schema/security  http://www.springframework.org/schema/security/spring-security.xsd
            http://www.springframework.org/schema/context   http://www.springframework.org/schema/context/spring-context-3.0.xsd"
        default-autowire="byName">

        <!-- ==================================================================== -->
        <!-- === REST Security ================================================== -->
        <!-- ==================================================================== -->
        <security:global-method-security secured-annotations="enabled" />

        <security:http auto-config="true" create-session="never" >
                <security:http-basic entry-point-ref="restAuthenticationEntryPoint"/>
                <security:custom-filter ref="authenticationTokenProcessingFilter" before="FORM_LOGIN_FILTER"/>
                <security:custom-filter ref="sessionTokenProcessingFilter" after="FORM_LOGIN_FILTER"/>
                <security:anonymous />
        </security:http>

        <!-- Entry point -->
        <bean id="restAuthenticationEntryPoint" class="it.geosolutions.geostore.services.rest.security.RestAuthenticationEntryPoint" >
                <property name="realmName" value="GeoStore"></property>
        </bean>
        <!-- GeoStore Auth Provider -->
        <bean id="geoStoreUserServiceAuthenticationProvider"
                class="it.geosolutions.geostore.services.rest.security.UserServiceAuthenticationProvider">
        </bean>

        <bean class="it.geosolutions.geostore.services.rest.security.UserAttributeTokenAuthenticationFilter"
        id="authenticationTokenProcessingFilter">
        </bean>

        <bean class="it.geosolutions.geostore.services.rest.security.SessionTokenAuthenticationFilter"
        id="sessionTokenProcessingFilter">
        </bean>

        <!-- bean class="it.geosolutions.geostore.services.rest.security.WebServiceTokenAuthenticationFilter"
        id="authenticationTokenProcessingFilter">
        <constructor-arg><value>http://localhost:8080/geoserver/www/{token}.txt</value></constructor-arg>
    </bean-->

        <!-- Inject into the Authentication Manager the GeoStore Auth Provider -->
        <security:authentication-manager>
                <security:authentication-provider ref='geoStoreUserServiceAuthenticationProvider' />
                <security:authentication-provider ref='geostoreLdapProvider' />
        </security:authentication-manager>

        <!-- LDAP Auth Provider -->
        <!-- Simple namespace-based configuration -->

        <!-- Starts an internal LDAP server -->
        <!-- security:ldap-server ldif="classpath*:users.ldif" port="33389" root="${ldap.root}"/ -->

        <!-- security:authentication-manager>
                <security:ldap-authentication-provider
                        user-search-filter="(uid={0})"
                        user-search-base="ou=people"
                        group-search-filter="(member={0})"
                        group-search-base="ou=groups"
                        group-role-attribute="cn"
                        role-prefix="ROLE_">
                </security:ldap-authentication-provider>
                <security:authentication-provider ref='geostoreLdapProvider' />
        </security:authentication-manager -->

        <!-- Traditional Bean version of the same configuration -->


        <!-- This bean points at the embedded directory server created by the ldap-server element above -->
        <bean id="contextSource" class="org.springframework.security.ldap.DefaultSpringSecurityContextSource">
                <constructor-arg value="${LDAP_URL}" />
                <!-- constructor-arg value="" / -->
                <!-- property name="userDn" value=""/ See externalized properties file -->
                <!-- property name="password" value=""/ See externalized properties file -->
        </bean>

    <!--
     <bean id="ldapInitializer" class="it.geosolutions.geostore.init.LDAPInit" lazy-init="false">
       <constructor-arg ref="geostoreLdapProvider" />
     </bean>
     -->

        <bean id="geostoreLdapProvider"
                class="it.geosolutions.geostore.services.rest.security.UserLdapAuthenticationProvider">
                <constructor-arg>
                        <bean
                                class="org.springframework.security.ldap.authentication.BindAuthenticator">
                                <constructor-arg ref="contextSource" />

                                <property name="userSearch">
                                        <bean id="userSearch"
                                                class="org.springframework.security.ldap.search.FilterBasedLdapUserSearch">
                                                <constructor-arg index="0" value="" />
                                                <constructor-arg index="1" value="(&amp;(objectCategory=${LDAP_USER_SEARCH_CATEGORY})(|(memberOf=${LDAP_USER_SEARCH_MEMBER_OF_1})(memberOf=${LDAP_USER_SEARCH_MEMBER_OF_2})(memberOf=${LDAP_USER_SEARCH_MEMBER_OF_3})(memberOf=${LDAP_USER_SEARCH_MEMBER_OF_4}))(sAMAccountName={0}))" />
                                                <constructor-arg index="2" ref="contextSource" />
                                        </bean>
                                </property>

                        </bean>
                </constructor-arg>


                <constructor-arg>
                        <bean
                                class="it.geosolutions.geostore.services.rest.security.GeoStoreLdapAuthoritiesPopulator">
                                <constructor-arg ref="contextSource" />
                                <!-- groupSearchBase -->
                                <constructor-arg value="${LDAP_GROUP_SEARCH_BASE}" />
                                <!-- roleSearchBase -->
                                <constructor-arg value="${LDAP_ROLE_SEARCH_BASE}" />
                                <!-- ignore partial result exception in the log file -->
                                <property name="ignorePartialResultException" value="true"/>

                        </bean>
                </constructor-arg>


        </bean>

</beans>
